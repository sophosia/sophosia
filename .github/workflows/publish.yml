name: Release

on:
  push:
    tags:
      - v*

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
        
      - name: get version
        run: |
          ref=${{github.ref}}
          echo VERSION=${ref#refs/tags/v} >> $GITHUB_ENV

      - name: create release
        id: create-release
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.VERSION}`,
              name: `Sophosia v${process.env.VERSION}`,
            })
            return data.id

      - name: generate release notes
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.VERSION}`,
            })

  publish-sophosia:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use

      - name: build sophosia (and do macos code sign)
        id: build-sophosia
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: rename and move portable .exe file
        if: matrix.platform == 'windows-latest'
        run: |
          ref=${{github.ref}}
          version=${ref#refs/tags/v}
          name=Sophosia_${version}_portable.exe
          mkdir src-tauri/target/release/bundle/portable
          mv "src-tauri/target/release/Sophosia.exe" "src-tauri/target/release/bundle/portable/$name"
        shell: bash

      - name: upload windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.platform }}
          path: src-tauri/target/release/bundle/*/Sophosia*

      - name: upload latest.json to release
        if: matrix.platform == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: latest.json

  windows-code-sign:
    needs: publish-sophosia
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: get artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts

      - name: sign artifact with CodeSignTool (windows code signing for installer)
        uses: sslcom/actions-codesigner@develop
        with:
          command: sign
          username: ${{ secrets.ES_USERNAME }}
          password: ${{ secrets.ES_PASSWORD }}
          credential_id: ${{ secrets.CREDENTIAL_ID }}
          totp_secret: ${{ secrets.ES_TOTP_SECRET }} # 2FA
          file_path: msi/Sophosia*

      - name: sign artifact with CodeSignTool (windows code signing for portable exe)
        uses: sslcom/actions-codesigner@develop
        with:
          command: sign
          username: ${{ secrets.ES_USERNAME }}
          password: ${{ secrets.ES_PASSWORD }}
          credential_id: ${{ secrets.CREDENTIAL_ID }}
          totp_secret: ${{ secrets.ES_TOTP_SECRET }} # 2FA
          file_path: portable/Sophosia*
      
      - name: update windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-windows-latest
          path: ./*/Sophosia*
          overwrite: true

  upload-artifacts:
    needs: windows-code-sign
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: get all artifacts
        uses: actions/download-artifact@v4
      
      - name: upload assets to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./*/[Ss]ophosia*